<?php

define('salesforce_social_action_DEFAULT_MAP_ID', -30);

/**
 * @file
 * Provides advocacy integration support for Salesforce.
 */

/**
 * Implements hook_salesforce_genmap_map_field_info_alter().
 */
function salesforce_social_action_salesforce_genmap_map_field_info_alter(&$fields, $node, $module) {
  if ($module == 'webform' && $node->type == 'sba_social_action') {
    $fields['salesforce_node_map']['#fields']['action'] = 'Action';
    $fields['salesforce_node_map']['#fields']['action_type'] = 'Action Type';
  }
}

/**
 * Implements hook_salesforce_genmap_map_fields_alter().
 */
function salesforce_social_action_salesforce_genmap_map_fields_alter(&$fields, $context) {
  if ($context['module'] == 'webform' && $context['map']->module == 'salesforce_social_action') {
    $fields[$context['map']->field_map['salesforce_node_map']['action']] = sprintf('[sb_action__c:sba_social_action:%d]', $context['node']->nid);
    $fields[$context['map']->field_map['salesforce_node_map']['action_type']] = 'Social Action';
  }
}

/**
 * Implements hook_node_insert().
 *
 * Insert a copy of the default map when a message_action node is created.
 */
function salesforce_social_action_node_insert($node) {
  // If node is a message action type.
  if ($node->type == 'sba_social_action') {
    // And if we have a default map. Salesforce social action default is -30.
    // Only copy the map for fresh inserts. Webform user will handle clones.
    $nid = salesforce_social_action_DEFAULT_MAP_ID;
    if (empty($node->clone_from_original_nid)) {
      $map = salesforce_genmap_load_map($nid, 'webform');
      if (!empty($map)) {
        // Copy the map to the node.
        unset($map->mid);
        $map->nid = $node->nid;
        salesforce_genmap_save_map($map, 'webform');
      }
    }
    // Set the relationship from the submission to the contact.
    $webform_user_reference_fields = variable_get('webform_user_reference_fields', array());
    $webform_user_reference_fields[$node->nid] = 'Contact__c';
    variable_set('webform_user_reference_fields', $webform_user_reference_fields);
  }
}
/**
 * Implements hook_node_delete().
 *
 * Delete a fieldmap when a message action node is deelted.
 */
function salesforce_social_action_node_delete($node) {
  // If node is a message action type.
  if ($node->type == 'sba_social_action') {
    salesforce_genmap_delete_map($node->nid, 'webform');
    $webform_user_reference_fields = variable_get('webform_user_reference_fields', array());
    unset($webform_user_reference_fields[$node->nid]);
    variable_set('webform_user_reference_fields', $webform_user_reference_fields);
  }
}